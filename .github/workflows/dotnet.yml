name: .NET CI/CD\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\nenv:\n  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}\n  IMAGE_TAG: ${{ github.sha }}\n\njobs:\n  build-test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Set up .NET\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: '8.0.x'\n      - name: Restore dependencies\n        run: dotnet restore ./src\n      - name: Build services\n        run: dotnet build --configuration Release ./src\n      - name: Run tests\n        run: dotnet test --no-build --configuration Release ./src\n\n  build-images:\n    needs: build-test\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Login to registry\n        uses: docker/login-action@v3\n        with:\n          registry: ${{ secrets.REGISTRY_URL }}\n          username: ${{ secrets.REGISTRY_USERNAME }}\n          password: ${{ secrets.REGISTRY_PASSWORD }}\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n      - name: Build and push ServiceA image\n        uses: docker/build-push-action@v5\n        with:\n          context: ./src/ServiceA\n          file: ./src/ServiceA/Dockerfile\n          tags: ${{ secrets.REGISTRY_URL }}/servicea:${{ env.IMAGE_TAG }}\n          push: true\n      - name: Build and push ServiceB image\n        uses: docker/build-push-action@v5\n        with:\n          context: ./src/ServiceB\n          file: ./src/ServiceB/Dockerfile\n          tags: ${{ secrets.REGISTRY_URL }}/serviceb:${{ env.IMAGE_TAG }}\n          push: true\n\n  deploy:\n    needs: build-images\n    runs-on: ubuntu-latest\n    environment:\n      name: staging\n    steps:\n      - uses: actions/checkout@v4\n      - name: Set up kubectl\n        uses: azure/setup-kubectl@v3\n        with:\n          version: 'v1.28.0'\n      - name: Set kubeconfig\n        run: |\n          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config\n      - name: Set up Helm\n        uses: azure/setup-helm@v3\n      - name: Deploy via Helm\n        run: |\n          helm upgrade --install microservices helm/chart \\n            --set serviceA.image=${{ secrets.REGISTRY_URL }}/servicea:${{ env.IMAGE_TAG }} \\n            --set serviceB.image=${{ secrets.REGISTRY_URL }}/serviceb:${{ env.IMAGE_TAG }} \\n            --kube-context ${{ secrets.HELM_KUBE_CONTEXT }}\n
